[{"/Users/tiffanyyelle/src/Shopify/shopify/src/index.js":"1","/Users/tiffanyyelle/src/Shopify/shopify/src/reportWebVitals.js":"2","/Users/tiffanyyelle/src/Shopify/shopify/src/App.js":"3","/Users/tiffanyyelle/src/Shopify/shopify/src/components/search_results.js":"4","/Users/tiffanyyelle/src/Shopify/shopify/src/components/nominations.js":"5","/Users/tiffanyyelle/src/Shopify/shopify/src/components/search.js":"6"},{"size":500,"mtime":1608279724733,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1608279724735,"results":"9","hashOfConfig":"8"},{"size":1965,"mtime":1608338855403,"results":"10","hashOfConfig":"8"},{"size":1880,"mtime":1608336677099,"results":"11","hashOfConfig":"8"},{"size":1330,"mtime":1608336703036,"results":"12","hashOfConfig":"8"},{"size":1171,"mtime":1608338034013,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"piloqr",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/tiffanyyelle/src/Shopify/shopify/src/index.js",[],["29","30"],"/Users/tiffanyyelle/src/Shopify/shopify/src/reportWebVitals.js",[],"/Users/tiffanyyelle/src/Shopify/shopify/src/App.js",[],"/Users/tiffanyyelle/src/Shopify/shopify/src/components/search_results.js",["31"],"import React, { useState, useEffect } from 'react';\n\nfunction SearchResults({ movie, nominations, setNominations }) {\n  const [buttonText, setButtonText] = useState('Nominate');\n  const [cursor, setCursor] = useState('pointer');\n  const [buttonColor, setButtonColor] = useState('#59bfff');\n  const [buttonClicked, setButtonClicked] = useState(false);\n\n    useEffect(() => {\n        disableButton()\n    }, [nominations])\n\n\n  const handleNominate = (movie) => {\n    setNominations([...nominations, movie]);\n    localStorage.setItem('nominations', JSON.stringify([...nominations, movie]));\n  };\n\n  const disableButton = () => {\n\n    /*This prevents re-nominating a movie already in nominations from local storage*/\n    const checkID = () => {\n        for (let nom of nominations){\n            if (movie.imdbID === nom.imdbID){\n                return true\n            }\n        }\n    }\n\n    if (nominations.includes(movie) || checkID()){\n        setButtonClicked(true);\n        setButtonColor('gray');\n        setCursor('auto');\n        setButtonText('Nominated');\n    } else {\n        setButtonClicked(false);\n        setButtonColor('#59bfff');\n        setCursor('pointer');\n        setButtonText('Nominate');\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <div className='result-inner-wrapper'>\n        <div className='result-image'>\n          <img src={movie.Poster} alt='Movie'></img>\n        </div>\n        <div className='result-descript'>\n          {movie.Title}\n          <br/>\n          ({movie.Year})\n        </div>\n        <div className='result-btn'>\n          <button\n            disabled={buttonClicked}\n            onClick={() => handleNominate(movie)}\n            style={{ backgroundColor: buttonColor, cursor: cursor }}\n          >\n            {buttonText}\n          </button>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default SearchResults;\n","/Users/tiffanyyelle/src/Shopify/shopify/src/components/nominations.js",["32"],"function Nominations({nomination, setNominations, nominations}){\n\n    const handleRemove = (nom) => {    \n        const rmvNom = nominations.filter(movie => movie !== nom)\n        setNominations(rmvNom)\n        localStorage.setItem('nominations', JSON.stringify(rmvNom));\n    }\n\n    return (\n        <div className=\"nomination-inner-wrapper\">\n            <div className=\"nomination-image\">\n                <img src={nomination.Poster} alt=\"Movie Poster\"></img>\n            </div>\n            <div className=\"nomination-descript\">\n                <div>\n                    {nomination.Title} \n                    <br/>\n                    ({nomination.Year})\n                </div>\n            </div>\n            <div className=\"nomination-btn\">\n                <button onClick={() => handleRemove(nomination)}>Remove</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Nominations\n\n{/* <div className='result-inner-wrapper'>\n<div className='result-image'>\n  <img src={movie.Poster} alt='Movie'></img>\n</div>\n<div className='result-descript'>\n  <p>{movie.Title}</p>\n  <p>{movie.Year}</p>\n</div>\n<div className='result-btn'>\n  <button\n    disabled={buttonClicked}\n    onClick={() => handleNominate(movie)}\n    style={{ backgroundColor: buttonColor, cursor: cursor }}\n  >\n    {buttonText}\n  </button>\n</div>\n</div> */}","/Users/tiffanyyelle/src/Shopify/shopify/src/components/search.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":11,"column":8,"nodeType":"39","endLine":11,"endColumn":21,"suggestions":"40"},{"ruleId":"41","severity":1,"message":"42","line":30,"column":1,"nodeType":"43","messageId":"44","endLine":47,"endColumn":11},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'disableButton'. Either include it or remove the dependency array.","ArrayExpression",["47"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation",{"desc":"48","fix":"49"},"Update the dependencies array to be: [disableButton, nominations]",{"range":"50","text":"51"},[405,418],"[disableButton, nominations]"]